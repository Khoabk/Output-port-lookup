

================================================================
== Vivado HLS Report for 'eth'
================================================================
* Date:           Wed Dec 15 11:44:29 2021

* Version:        2018.2 (Build 2258646 on Thu Jun 14 20:25:20 MDT 2018)
* Project:        Output_port_lookup
* Solution:       solution1
* Product family: virtex7
* Target device:  xc7vx690tffg1157-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     1.840|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    0|    0|    0|    0|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 0
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 1
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.84>
ST_1 : Operation 2 [1/1] (0.00ns)   --->   "%reset_V_read = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %reset_V)"   --->   Operation 2 'read' 'reset_V_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 3 [1/1] (0.00ns)   --->   "%tlast_V_read = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %tlast_V)"   --->   Operation 3 'read' 'tlast_V_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 4 [1/1] (0.00ns)   --->   "%valid_V_read = call i1 @_ssdm_op_Read.ap_auto.i1(i1 %valid_V)"   --->   Operation 4 'read' 'valid_V_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "%tuser_V_read = call i128 @_ssdm_op_Read.ap_auto.i128(i128 %tuser_V)"   --->   Operation 5 'read' 'tuser_V_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%tdata_V_read = call i256 @_ssdm_op_Read.ap_auto.i256(i256 %tdata_V)"   --->   Operation 6 'read' 'tdata_V_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "br i1 %reset_V_read, label %1, label %2" [Output_port_lookup/Eth.cpp:32]   --->   Operation 7 'br' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "%state_load = load i1* @state, align 1"   --->   Operation 8 'load' 'state_load' <Predicate = (!reset_V_read)> <Delay = 0.00>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "br i1 %state_load, label %5, label %3" [Output_port_lookup/Eth.cpp:43]   --->   Operation 9 'br' <Predicate = (!reset_V_read)> <Delay = 0.00>
ST_1 : Operation 10 [1/1] (1.18ns)   --->   "br i1 %valid_V_read, label %4, label %._crit_edge" [Output_port_lookup/Eth.cpp:48]   --->   Operation 10 'br' <Predicate = (!reset_V_read & !state_load)> <Delay = 1.18>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%p_Result_s = call i8 @_ssdm_op_PartSelect.i8.i128.i32.i32(i128 %tuser_V_read, i32 16, i32 23)" [Output_port_lookup/Eth.cpp:50]   --->   Operation 11 'partselect' 'p_Result_s' <Predicate = (!reset_V_read & !state_load & valid_V_read & write_flag3_1)> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%tmp = trunc i256 %tdata_V_read to i48" [Output_port_lookup/Eth.cpp:51]   --->   Operation 12 'trunc' 'tmp' <Predicate = (!reset_V_read & !state_load & valid_V_read & write_flag3_1)> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%p_Result_2 = call i48 @_ssdm_op_PartSelect.i48.i256.i32.i32(i256 %tdata_V_read, i32 48, i32 95)" [Output_port_lookup/Eth.cpp:52]   --->   Operation 13 'partselect' 'p_Result_2' <Predicate = (!reset_V_read & !state_load & valid_V_read & write_flag3_1)> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (1.18ns)   --->   "store i1 true, i1* @state, align 1" [Output_port_lookup/Eth.cpp:54]   --->   Operation 14 'store' <Predicate = (!reset_V_read & !state_load & valid_V_read)> <Delay = 1.18>
ST_1 : Operation 15 [1/1] (1.18ns)   --->   "br label %._crit_edge" [Output_port_lookup/Eth.cpp:56]   --->   Operation 15 'br' <Predicate = (!reset_V_read & !state_load & valid_V_read)> <Delay = 1.18>
ST_1 : Operation 16 [1/1] (0.61ns)   --->   "%brmerge_demorgan = and i1 %valid_V_read, %tlast_V_read" [Output_port_lookup/Eth.cpp:68]   --->   Operation 16 'and' 'brmerge_demorgan' <Predicate = (!reset_V_read & state_load)> <Delay = 0.61> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "br i1 %brmerge_demorgan, label %6, label %._crit_edge145" [Output_port_lookup/Eth.cpp:68]   --->   Operation 17 'br' <Predicate = (!reset_V_read & state_load)> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (1.18ns)   --->   "store i1 false, i1* @state, align 1" [Output_port_lookup/Eth.cpp:68]   --->   Operation 18 'store' <Predicate = (!reset_V_read & state_load & brmerge_demorgan)> <Delay = 1.18>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "br label %._crit_edge145" [Output_port_lookup/Eth.cpp:68]   --->   Operation 19 'br' <Predicate = (!reset_V_read & state_load & brmerge_demorgan)> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (1.18ns)   --->   "br label %._crit_edge" [Output_port_lookup/Eth.cpp:70]   --->   Operation 20 'br' <Predicate = (!reset_V_read & state_load)> <Delay = 1.18>
ST_1 : Operation 21 [1/1] (1.18ns)   --->   "store i1 false, i1* @state, align 1" [Output_port_lookup/Eth.cpp:34]   --->   Operation 21 'store' <Predicate = (reset_V_read)> <Delay = 1.18>
ST_1 : Operation 22 [1/1] (1.18ns)   --->   "br label %._crit_edge" [Output_port_lookup/Eth.cpp:39]   --->   Operation 22 'br' <Predicate = (reset_V_read)> <Delay = 1.18>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%write_flag3_1 = phi i1 [ true, %1 ], [ true, %._crit_edge145 ], [ true, %4 ], [ false, %3 ]"   --->   Operation 23 'phi' 'write_flag3_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns) (grouped into LUT with out node ssdm_int_V_write_ass_2)   --->   "%src_mac_V_1 = phi i48 [ 0, %1 ], [ 0, %._crit_edge145 ], [ %p_Result_2, %4 ], [ undef, %3 ]" [Output_port_lookup/Eth.cpp:52]   --->   Operation 24 'phi' 'src_mac_V_1' <Predicate = (write_flag3_1)> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns) (grouped into LUT with out node ssdm_int_V_write_ass)   --->   "%dst_mac_V_1 = phi i48 [ 0, %1 ], [ 0, %._crit_edge145 ], [ %tmp, %4 ], [ undef, %3 ]" [Output_port_lookup/Eth.cpp:51]   --->   Operation 25 'phi' 'dst_mac_V_1' <Predicate = (write_flag3_1)> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns) (grouped into LUT with out node ssdm_int_V_write_ass_3)   --->   "%src_port_V_1 = phi i8 [ 0, %1 ], [ 0, %._crit_edge145 ], [ %p_Result_s, %4 ], [ undef, %3 ]" [Output_port_lookup/Eth.cpp:50]   --->   Operation 26 'phi' 'src_port_V_1' <Predicate = (write_flag3_1)> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns) (grouped into LUT with out node ssdm_int_V_write_ass_4)   --->   "%eth_done_V_1 = phi i1 [ false, %1 ], [ false, %._crit_edge145 ], [ true, %4 ], [ true, %3 ]"   --->   Operation 27 'phi' 'eth_done_V_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.65ns) (out node of the LUT)   --->   "%ssdm_int_V_write_ass = select i1 %write_flag3_1, i48 %dst_mac_V_1, i48 0" [Output_port_lookup/Eth.cpp:78]   --->   Operation 28 'select' 'ssdm_int_V_write_ass' <Predicate = true> <Delay = 0.65> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.47> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 29 [1/1] (0.65ns) (out node of the LUT)   --->   "%ssdm_int_V_write_ass_2 = select i1 %write_flag3_1, i48 %src_mac_V_1, i48 0" [Output_port_lookup/Eth.cpp:78]   --->   Operation 29 'select' 'ssdm_int_V_write_ass_2' <Predicate = true> <Delay = 0.65> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.47> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 30 [1/1] (0.47ns) (out node of the LUT)   --->   "%ssdm_int_V_write_ass_3 = select i1 %write_flag3_1, i8 %src_port_V_1, i8 0" [Output_port_lookup/Eth.cpp:78]   --->   Operation 30 'select' 'ssdm_int_V_write_ass_3' <Predicate = true> <Delay = 0.47> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.47> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_1 : Operation 31 [1/1] (0.61ns) (out node of the LUT)   --->   "%ssdm_int_V_write_ass_4 = and i1 %write_flag3_1, %eth_done_V_1" [Output_port_lookup/Eth.cpp:78]   --->   Operation 31 'and' 'ssdm_int_V_write_ass_4' <Predicate = true> <Delay = 0.61> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.61> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%mrv = insertvalue { i48, i48, i8, i1 } undef, i48 %ssdm_int_V_write_ass, 0" [Output_port_lookup/Eth.cpp:78]   --->   Operation 32 'insertvalue' 'mrv' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%mrv_1 = insertvalue { i48, i48, i8, i1 } %mrv, i48 %ssdm_int_V_write_ass_2, 1" [Output_port_lookup/Eth.cpp:78]   --->   Operation 33 'insertvalue' 'mrv_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%mrv_2 = insertvalue { i48, i48, i8, i1 } %mrv_1, i8 %ssdm_int_V_write_ass_3, 2" [Output_port_lookup/Eth.cpp:78]   --->   Operation 34 'insertvalue' 'mrv_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%mrv_3 = insertvalue { i48, i48, i8, i1 } %mrv_2, i1 %ssdm_int_V_write_ass_4, 3" [Output_port_lookup/Eth.cpp:78]   --->   Operation 35 'insertvalue' 'mrv_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "ret { i48, i48, i8, i1 } %mrv_3" [Output_port_lookup/Eth.cpp:78]   --->   Operation 36 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.84ns
The critical path consists of the following:
	wire read on port 'valid_V' [9]  (0 ns)
	multiplexor before 'phi' operation ('write_flag3_1') [36]  (1.18 ns)
	'phi' operation ('write_flag3_1') [36]  (0 ns)
	'select' operation ('ssdm_int<48 + 1024 * 0, false>.V', Output_port_lookup/Eth.cpp:78) [41]  (0.657 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
