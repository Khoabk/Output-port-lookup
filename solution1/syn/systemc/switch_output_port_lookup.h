// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _switch_output_port_lookup_HH_
#define _switch_output_port_lookup_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "lut.h"
#include "Read_r.h"
#include "eth.h"
#include "switch_output_porbkb.h"
#include "switch_output_porcud.h"

namespace ap_rtl {

struct switch_output_port_lookup : public sc_module {
    // Port declarations 19
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<1> > reset_V;
    sc_in< sc_lv<256> > s_axis_tdata_V;
    sc_in< sc_lv<32> > s_axis_tkeep_V;
    sc_in< sc_lv<128> > s_axis_tuser_V;
    sc_in< sc_lv<1> > s_axis_tvalid_V;
    sc_out< sc_lv<1> > s_axis_tready_V;
    sc_in< sc_lv<1> > s_axis_tlast_V;
    sc_out< sc_lv<256> > m_axis_tdata_V;
    sc_out< sc_lv<32> > m_axis_tkeep_V;
    sc_out< sc_lv<128> > m_axis_tuser_V;
    sc_out< sc_lv<1> > m_axis_tvalid_V;
    sc_in< sc_lv<1> > m_axis_tready_V;
    sc_out< sc_lv<1> > m_axis_tlast_V;


    // Module declarations
    switch_output_port_lookup(sc_module_name name);
    SC_HAS_PROCESS(switch_output_port_lookup);

    ~switch_output_port_lookup();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    switch_output_porbkb* Queue_buffer_packet_U;
    switch_output_porcud* Queue_buffer_V_U;
    lut* lut_ret_i_i_lut_fu_278;
    Read_r* grp_Read_r_fu_353;
    eth* eth_ret_i_i_eth_fu_377;
    sc_signal< sc_lv<5> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<32> > Queue_ap_axis_size;
    sc_signal< sc_lv<4> > Queue_wr_pos_V_1;
    sc_signal< sc_lv<4> > Queue_rd_pos_V_1;
    sc_signal< sc_lv<32> > Queue_size;
    sc_signal< sc_lv<4> > Queue_wr_pos_V;
    sc_signal< sc_lv<4> > Queue_rd_pos_V;
    sc_signal< sc_lv<4> > Queue_buffer_packet_address0;
    sc_signal< sc_logic > Queue_buffer_packet_ce0;
    sc_signal< sc_logic > Queue_buffer_packet_we0;
    sc_signal< sc_lv<417> > Queue_buffer_packet_d0;
    sc_signal< sc_lv<417> > Queue_buffer_packet_q0;
    sc_signal< sc_lv<4> > Queue_buffer_V_address0;
    sc_signal< sc_logic > Queue_buffer_V_ce0;
    sc_signal< sc_logic > Queue_buffer_V_we0;
    sc_signal< sc_lv<8> > Queue_buffer_V_q0;
    sc_signal< sc_lv<1> > this_assign_2_fu_388_p2;
    sc_signal< sc_lv<1> > this_assign_2_reg_621;
    sc_signal< sc_lv<1> > rhs_V_fu_444_p2;
    sc_signal< sc_lv<1> > rhs_V_reg_628;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<48> > dst_mac_V_reg_636;
    sc_signal< sc_lv<48> > src_mac_V_reg_641;
    sc_signal< sc_lv<8> > src_port_V_reg_646;
    sc_signal< sc_lv<1> > eth_done_V_reg_651;
    sc_signal< sc_logic > lut_ret_i_i_lut_fu_278_ap_start;
    sc_signal< sc_logic > lut_ret_i_i_lut_fu_278_ap_done;
    sc_signal< sc_logic > lut_ret_i_i_lut_fu_278_ap_idle;
    sc_signal< sc_logic > lut_ret_i_i_lut_fu_278_ap_ready;
    sc_signal< sc_lv<8> > lut_ret_i_i_lut_fu_278_ap_return_0;
    sc_signal< sc_lv<1> > lut_ret_i_i_lut_fu_278_ap_return_1;
    sc_signal< sc_logic > grp_Read_r_fu_353_ap_start;
    sc_signal< sc_logic > grp_Read_r_fu_353_ap_done;
    sc_signal< sc_logic > grp_Read_r_fu_353_ap_idle;
    sc_signal< sc_logic > grp_Read_r_fu_353_ap_ready;
    sc_signal< sc_lv<32> > grp_Read_r_fu_353_Queue_ap_axis_size_o;
    sc_signal< sc_logic > grp_Read_r_fu_353_Queue_ap_axis_size_o_ap_vld;
    sc_signal< sc_lv<4> > grp_Read_r_fu_353_Queue_wr_pos_V_1;
    sc_signal< sc_logic > grp_Read_r_fu_353_Queue_wr_pos_V_1_ap_vld;
    sc_signal< sc_lv<4> > grp_Read_r_fu_353_Queue_rd_pos_V_1_o;
    sc_signal< sc_logic > grp_Read_r_fu_353_Queue_rd_pos_V_1_o_ap_vld;
    sc_signal< sc_lv<32> > grp_Read_r_fu_353_Queue_size_o;
    sc_signal< sc_logic > grp_Read_r_fu_353_Queue_size_o_ap_vld;
    sc_signal< sc_lv<4> > grp_Read_r_fu_353_Queue_wr_pos_V;
    sc_signal< sc_logic > grp_Read_r_fu_353_Queue_wr_pos_V_ap_vld;
    sc_signal< sc_lv<4> > grp_Read_r_fu_353_Queue_rd_pos_V_o;
    sc_signal< sc_logic > grp_Read_r_fu_353_Queue_rd_pos_V_o_ap_vld;
    sc_signal< sc_lv<4> > grp_Read_r_fu_353_Queue_buffer_packet_address0;
    sc_signal< sc_logic > grp_Read_r_fu_353_Queue_buffer_packet_ce0;
    sc_signal< sc_lv<4> > grp_Read_r_fu_353_Queue_buffer_V_address0;
    sc_signal< sc_logic > grp_Read_r_fu_353_Queue_buffer_V_ce0;
    sc_signal< sc_lv<256> > grp_Read_r_fu_353_ap_return_0;
    sc_signal< sc_lv<32> > grp_Read_r_fu_353_ap_return_1;
    sc_signal< sc_lv<128> > grp_Read_r_fu_353_ap_return_2;
    sc_signal< sc_lv<1> > grp_Read_r_fu_353_ap_return_3;
    sc_signal< sc_lv<1> > grp_Read_r_fu_353_ap_return_4;
    sc_signal< sc_logic > eth_ret_i_i_eth_fu_377_ap_start;
    sc_signal< sc_logic > eth_ret_i_i_eth_fu_377_ap_done;
    sc_signal< sc_logic > eth_ret_i_i_eth_fu_377_ap_idle;
    sc_signal< sc_logic > eth_ret_i_i_eth_fu_377_ap_ready;
    sc_signal< sc_lv<1> > eth_ret_i_i_eth_fu_377_valid_V;
    sc_signal< sc_lv<48> > eth_ret_i_i_eth_fu_377_ap_return_0;
    sc_signal< sc_lv<48> > eth_ret_i_i_eth_fu_377_ap_return_1;
    sc_signal< sc_lv<8> > eth_ret_i_i_eth_fu_377_ap_return_2;
    sc_signal< sc_lv<1> > eth_ret_i_i_eth_fu_377_ap_return_3;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > grp_Read_r_fu_353_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > r_V_fu_450_p2;
    sc_signal< sc_lv<64> > tmp_i_i_fu_493_p1;
    sc_signal< sc_lv<64> > tmp_i3_i_fu_555_p1;
    sc_signal< sc_lv<1> > lookup_done_V_fu_519_p1;
    sc_signal< sc_lv<1> > reset_V_read_read_fu_204_p2;
    sc_signal< sc_lv<32> > Queue_size_assign_i_fu_465_p2;
    sc_signal< sc_lv<4> > Queue_wr_pos_V_assi_fu_481_p2;
    sc_signal< sc_lv<32> > Queue_size_assign_i_1_fu_527_p2;
    sc_signal< sc_lv<4> > Queue_wr_pos_V_assi_1_fu_543_p2;
    sc_signal< sc_lv<1> > s_axis_tready_V_preg;
    sc_signal< sc_lv<29> > tmp_fu_434_p4;
    sc_signal< sc_lv<5> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<5> ap_ST_fsm_state1;
    static const sc_lv<5> ap_ST_fsm_state2;
    static const sc_lv<5> ap_ST_fsm_state3;
    static const sc_lv<5> ap_ST_fsm_state4;
    static const sc_lv<5> ap_ST_fsm_state5;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<29> ap_const_lv29_1;
    static const sc_lv<4> ap_const_lv4_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_Queue_buffer_V_address0();
    void thread_Queue_buffer_V_ce0();
    void thread_Queue_buffer_V_we0();
    void thread_Queue_buffer_packet_address0();
    void thread_Queue_buffer_packet_ce0();
    void thread_Queue_buffer_packet_d0();
    void thread_Queue_buffer_packet_we0();
    void thread_Queue_size_assign_i_1_fu_527_p2();
    void thread_Queue_size_assign_i_fu_465_p2();
    void thread_Queue_wr_pos_V_assi_1_fu_543_p2();
    void thread_Queue_wr_pos_V_assi_fu_481_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_eth_ret_i_i_eth_fu_377_ap_start();
    void thread_eth_ret_i_i_eth_fu_377_valid_V();
    void thread_grp_Read_r_fu_353_ap_start();
    void thread_lookup_done_V_fu_519_p1();
    void thread_lut_ret_i_i_lut_fu_278_ap_start();
    void thread_m_axis_tdata_V();
    void thread_m_axis_tkeep_V();
    void thread_m_axis_tlast_V();
    void thread_m_axis_tuser_V();
    void thread_m_axis_tvalid_V();
    void thread_r_V_fu_450_p2();
    void thread_reset_V_read_read_fu_204_p2();
    void thread_rhs_V_fu_444_p2();
    void thread_s_axis_tready_V();
    void thread_this_assign_2_fu_388_p2();
    void thread_tmp_fu_434_p4();
    void thread_tmp_i3_i_fu_555_p1();
    void thread_tmp_i_i_fu_493_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
